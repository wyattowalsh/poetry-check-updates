[tool.poetry]
name = "python-check-updates"
version = "1.0.0"
description = "like npm-check-updates but for python"
authors = ["Wyatt Walsh <wyattowalsh@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.13"
pydantic = "^2.9.0"
pydantic-settings = "^2.4.0"
typer = {extras = ["all"], version = "^0.12.5"}
fastapi = {extras = ["all"], version = "^0.113.0"}
loguru = "^0.7.2"
rich = "^13.8.0"
pyyaml = "^6.0.2"
python-dotenv = "^1.0.1"
types-pyyaml = "^6.0.12.20240808"
nest-asyncio = "^1.6.0"
pandas = "^2.2.3"
plotly = {extras = ["all"], version = "^5.24.1"}
matplotlib = {extras = ["all"], version = "^3.9.2"}
seaborn = {extras = ["all"], version = "^0.13.2"}


[tool.poetry.group.notebook.dependencies]
nbdime = "^4.0.2"
jupyterlab-git = "^0.50.1"
jupyter-contrib-nbextensions = "^0.7.0"
jupyterlab = "^4.2.5"
jupyterlab-github = "^4.0.0"
jupyter-nbextensions-configurator = "^0.6.4"
nbconvert = "^7.16.4"
ipykernel = "^6.29.5"
ipywidgets = "^8.1.5"
ipython-sql = "^0.5.0"

[tool.poetry.group.notebook]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.3.2"
pytest-sugar = "^1.0.0"
pytest-emoji = "^0.2.0"
pytest-html = "^4.1.1"
pytest-icdiff = "^0.9"
pytest-instafail = "^0.5.0"
pytest-timeout = "^2.3.1"
pytest-benchmark = "^4.0.0"
pytest-cov = "^5.0.0"
hypothesis = "^6.112.0"
pytest-mock = "^3.14.0"
pytest-xdist = {extras = ["all"], version = "^3.6.1"}

[tool.poetry.group.format.dependencies]
isort = "^5.13.2"
black = "^24.8.0"
autoflake = "^2.3.1"
autopep8 = "^2.3.1"
yapf = "^0.40.2"

[tool.poetry.group.lint.dependencies]
ruff = "^0.6.4"
mypy = "^1.11.2"
pylint = "^3.2.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "-n auto --verbose --hypothesis-show-statistics --html=logs/report.html --self-contained-html --emoji --instafail --cov=python-check-updates --cov-append --cov-report html:logs/coverage"
testpaths = ["tests"]
console_output_style = "progress"
junit_logging = "all"
log_cli = true
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
log_cli_format = "%(asctime)s - [%(levelname)s] - %(name)s - (%(filename)s).%(funcName)s(%(lineno)d) - %(message)s"
log_cli_level = "DEBUG"
log_file = "logs/pytest-logs.txt"
log_file_date_format = "%Y-%m-%d %H:%M:%S"
log_file_format = "%(asctime)s - [%(levelname)s] - %(name)s - (%(filename)s).%(funcName)s(%(lineno)d) - %(message)s"
log_file_level = "DEBUG"
log_format = "%(asctime)s - [%(levelname)s] - %(name)s - (%(filename)s).%(funcName)s(%(lineno)d) - %(message)s"
log_level = "DEBUG"
required_plugins = ["pytest-sugar", "pytest-html", "pytest-emoji", "pytest-icdiff", "pytest-instafail", "pytest-timeout", "pytest-benchmark", "pytest-cov"]
timeout = 500

[tool.coverage.run]
data_file = "logs/.coverage"

[tool.isort]
profile = "black"
src_paths = ["python-check-updates", "tests"]

[tool.autoflake]
remove-all-unused-imports = true
remove-unused-variables = true
in-place = true
ignore-init-module-imports = true

[tool.yapf]
based_on_style = "pep8"
space_inside_brackets = true
spaces_around_dict_delimiters = true
spaces_around_list_delimiters = true
spaces_around_power_operator = true
spaces_around_tuple_delimiters = true
spaces_before_comment = "15, 20"

[tool.ruff]
line-length = 100
lint.select = ["E", "F", "W", "C", "B", "A", "I"]
lint.ignore = [
  "E201", "E202", "E203", "E501", "B017", "I001"
]
exclude = ["python-check-updates/__init__.py", "tests/__init__.py"]

[tool.mypy]
python_version = "3.13"
strict = true
ignore_missing_imports = true
show_error_codes = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true
disable_error_code = ["no-untyped-def", "valid-type"]

[[tool.mypy.overrides]]
module = "python-check-updates.config"
ignore_errors = true

[[tool.mypy.overrides]]
module = "tests.test_logging_config"
ignore_errors = true

[[tool.mypy.overrides]]
module = "tests.test_config"
ignore_errors = true

[tool.pylint]
max-line-length = 100
disable = [
  "C0114", "C0115", "C0116",  # Disable missing docstring warnings for simplicity
  "R0903",                     # Too few public methods
  "C0301",                     # Line too long
  "E0213",                     # No-self-argument error (for static methods, Pydantic)
  "W0621",                     # Redefining name
  "W0613",                     # Unused arguments in tests
  "R0801",                     # Duplicate code
  "R1705",                     # Unnecessary "else" after "return"
]